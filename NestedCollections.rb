# Nested Collections
# Этот урок продолжит развитие вашего знания о массивах и хэшах. Как вы уже заметили, массивы и хэши отлично подходят для хранения данных. Однако иногда данные 
# бывают более сложными и требуют более структурированного подхода, чем предлагают базовые массивы и хэши.
# Давайте рассмотрим, как можно использовать вложенные массивы и вложенные хэши для хранения более сложных данных

=begin
	

ChatGPT
Вложенные массивы
Массивы могут содержать любые типы данных, включая другие массивы. Массив, который содержит другие массивы, называется вложенным массивом или многомерным массивом.

Вложенные массивы могут быть полезны для хранения групп схожих данных или данных с позиционным отображением. Следующий вложенный массив с оценками тестов хранит 
группы схожих данных, а массив с почтовыми ящиками учителей хранит данные с позиционным отображением
	
=end

test_scores = [
  [97, 76, 79, 93],
  [79, 84, 76, 79],
  [88, 67, 64, 76],
  [94, 55, 67, 81]
]

teacher_mailboxes = [
  ["Adams", "Baker", "Clark", "Davis"],
  ["Jones", "Lewis", "Lopez", "Moore"],
  ["Perez", "Scott", "Smith", "Young"]
]

=begin
	
Доступ к элементам
Вы уже знаете, что каждый элемент в массиве имеет индекс. Для доступа к конкретному элементу во вложенном массиве используется вызов array[x][y], 
где x - индекс вложенного элемента, а y - индекс внутри этого вложенного элемента
	
=end

teacher_mailboxes[0][0]
#=> "Adams"
teacher_mailboxes[1][0]
#=> "Jones"
teacher_mailboxes[2][0]
#=> "Perez"

# Вы также можете использовать отрицательные индексы для получения элементов с конца массива, начиная с [-1]

teacher_mailboxes[0][-1]
#=> "Davis"
teacher_mailboxes[-1][0]
#=> "Perez"
teacher_mailboxes[-1][-2]
#=> "Smith"

=begin 

Если вы попытаетесь обратиться к индексу несуществующего вложенного элемента, возникнет ошибка NoMethodError, потому что класс nil не имеет метода []. 
Однако, так же как и в обычном массиве, если вы попытаетесь обратиться к несуществующему индексу внутри уже существующего вложенного элемента, он вернет значение nil

=end

teacher_mailboxes[3][0]
#=> NoMethodError
teacher_mailboxes[0][4]
#=> nil

=begin 

Если вы хотите, чтобы при попытке доступа к индексу несуществующего вложенного элемента возвращалось значение nil, вы можете использовать метод #dig. 
Этот метод также может быть использован при доступе к несуществующему индексу внутри уже существующего вложенного элемента

=end

teacher_mailboxes.dig(3, 0)
#=> nil
teacher_mailboxes.dig(0, 4)
#=> nil
